{"version":3,"sources":["components/Profile/Profile.styled.jsx","components/Profile/Profile.jsx","components/WrapperPage/WrapperPage.styled.jsx","components/WrapperPage/WrapperPage.jsx","utils/getRandomColor.js","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.styled.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.styled.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.styled.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["ProfileWrapper","styled","div","Description","Avatar","img","Name","p","Tag","Location","StatsList","ul","StatsItem","li","StatsLabel","span","StatsQuantity","Profile","name","tag","location","avatar","stats","followers","views","likes","src","alt","Container","WrapperPage","children","getRandomColor","r","Math","floor","random","g","b","toString","StatisticSection","section","StatisticTitle","h2","StatLlist","Item","color","Label","Percentage","Statistics","title","map","statsItem","label","percentage","id","CardFriend","StatusFriend","isOnline","AvatarFriend","NameFriend","FriendListItem","width","defaultProps","ListFriends","FriendList","friends","friend","TransactionHistoryTable","table","TransactionHistoryThead","thead","TransactionHistoryTbody","tbody","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f509cdff.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const ProfileWrapper = styled.div`\r\n  width: 400px;\r\n  margin: 0 auto;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  background-color: #ffffff;\r\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 6px rgba(0, 0, 0, 0.16);\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  width: 40%;\r\n  margin: 50px;\r\n  border-radius: 50%;\r\n  border: 1px solid #9da09f;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  margin-bottom: 30px;\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n`;\r\n\r\nexport const Tag = styled.p`\r\n  margin-bottom: 30px;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 22px;\r\n  color: #5e5b5bb5;\r\n`;\r\n\r\nexport const Location = styled.p`\r\n  margin-bottom: 40px;\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 22px;\r\n  color: #5e5b5bb5;\r\n`;\r\n\r\nexport const StatsList = styled.ul`\r\n  display: flex;\r\n  margin-top: 20px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StatsItem = styled.li`\r\n  display: flex;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: #e0e2e2;\r\n  border: 1px solid #9da09f;\r\n`;\r\n\r\nexport const StatsLabel = styled.span`\r\n  margin-bottom: 10px;\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n  color: #5e5b5bb5;\r\n`;\r\n\r\nexport const StatsQuantity = styled.span`\r\n  font-weight: 700;\r\n  font-size: 20px;\r\n  line-height: 22px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  ProfileWrapper,\r\n  Description,\r\n  Avatar,\r\n  Name,\r\n  Tag,\r\n  Location,\r\n  StatsList,\r\n  StatsItem,\r\n  StatsLabel,\r\n  StatsQuantity,\r\n} from './Profile.styled';\r\n\r\nfunction Profile({\r\n  name,\r\n  tag,\r\n  location,\r\n  avatar,\r\n  stats: { followers, views, likes },\r\n}) {\r\n  return (\r\n    <ProfileWrapper>\r\n      <Description>\r\n        <Avatar src={avatar} alt=\"Аватар пользователя\" />\r\n        <Name>{name}</Name>\r\n        <Tag>@{tag}</Tag>\r\n        <Location>{location}</Location>\r\n      </Description>\r\n\r\n      <StatsList>\r\n        <StatsItem>\r\n          <StatsLabel>Followers</StatsLabel>\r\n          <StatsQuantity>{followers}</StatsQuantity>\r\n        </StatsItem>\r\n        <StatsItem>\r\n          <StatsLabel>Views</StatsLabel>\r\n          <StatsQuantity>{views}</StatsQuantity>\r\n        </StatsItem>\r\n        <StatsItem>\r\n          <StatsLabel>Likes</StatsLabel>\r\n          <StatsQuantity>{likes}</StatsQuantity>\r\n        </StatsItem>\r\n      </StatsList>\r\n    </ProfileWrapper>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n","import { Container } from './WrapperPage.styled';\r\n\r\nfunction WrapperPage({ children }) {\r\n  return <Container>{children}</Container>;\r\n}\r\n\r\nexport default WrapperPage;\r\n","export function getRandomColor() {\r\n  let r = Math.floor(Math.random() * 256);\r\n  let g = Math.floor(Math.random() * 256);\r\n  let b = Math.floor(Math.random() * 256);\r\n  let color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\r\n  return color;\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const StatisticSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 500px;\r\n  margin: 40px auto 0px;\r\n  border: 1px solid rgb(199, 202, 202);\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const StatisticTitle = styled.h2`\r\n  margin: 20px;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  text-transform: uppercase;\r\n  color: rgb(68, 66, 66);\r\n`;\r\n\r\nexport const StatLlist = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n  background-color: ${({ color }) => color};\r\n  border: 1px solid rgba(185, 187, 186, 0.479);\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  margin: 10px;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  line-height: 20px;\r\n  color: #dae0e0;\r\n`;\r\n\r\nexport const Percentage = styled.span`\r\n  margin-bottom: 14px;\r\n  text-align: center;\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  text-transform: uppercase;\r\n  color: #dae0e0;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { getRandomColor } from '../../utils/getRandomColor';\r\nimport {\r\n  StatisticSection,\r\n  StatisticTitle,\r\n  StatLlist,\r\n  Item,\r\n  Label,\r\n  Percentage,\r\n} from './Statistics.styled';\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <StatisticSection>\r\n      {title && <StatisticTitle>{title}</StatisticTitle>}\r\n      <StatLlist>\r\n        {stats.map(statsItem => (\r\n          <Item key={statsItem.id} color={getRandomColor()}>\r\n            <Label>{statsItem.label}</Label>\r\n            <Percentage>{statsItem.percentage}</Percentage>\r\n          </Item>\r\n        ))}\r\n      </StatLlist>\r\n    </StatisticSection>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const CardFriend = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 6px rgba(0, 0, 0, 0.16);\r\n\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\nexport const StatusFriend = styled.span`\r\n  margin-right: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background-color: ${({ isOnline }) => (isOnline ? '#07861c' : '#ad0c14')};\r\n`;\r\nexport const AvatarFriend = styled.img`\r\n  margin-right: 20px;\r\n`;\r\nexport const NameFriend = styled.p`\r\n  font-weight: 700;\r\n  font-size: 24px;\r\n  line-height: 26px;\r\n  color: #1e2020;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  CardFriend,\r\n  StatusFriend,\r\n  AvatarFriend,\r\n  NameFriend,\r\n} from './FriendListItem.styled';\r\n\r\nfunction FriendListItem({ avatar, name, isOnline }) {\r\n  return (\r\n    <CardFriend>\r\n      <StatusFriend isOnline={isOnline} />\r\n      <AvatarFriend src={avatar} alt={name} width=\"48\" />\r\n      <NameFriend>{name}</NameFriend>\r\n    </CardFriend>\r\n  );\r\n}\r\n\r\nFriendListItem.defaultProps = {\r\n  avatar:\r\n    'https://w7.pngwing.com/pngs/998/203/png-transparent-black-and-white-no-to-camera-logo-video-on-demand-retail-website-simple-no-miscellaneous-television-text.png',\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListFriends = styled.ul`\r\n  display: flex;\r\n  margin: 0 auto;\r\n  width: 400px;\r\n  flex-direction: column;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from '../FriendListItem/FriendListItem';\r\nimport { ListFriends } from './FriendList.styled';\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ListFriends>\r\n      {friends.map(friend => (\r\n        <FriendListItem\r\n          key={friend.id}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n        />\r\n      ))}\r\n    </ListFriends>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const TransactionHistoryTable = styled.table`\r\n  border: 1px solid #dfeff091;\r\n  table-layout: fixed;\r\n  width: 600px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const TransactionHistoryThead = styled.thead`\r\n  & th {\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    padding: 15px;\r\n    color: #fff;\r\n    background: #47cddf;\r\n    border: 1px solid #47cddf;\r\n  }\r\n`;\r\n\r\nexport const TransactionHistoryTbody = styled.tbody`\r\n  & td {\r\n    padding: 15px;\r\n    border: 1px solid #eee;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    color: #5e5b5b;\r\n  }\r\n\r\n  tr:nth-of-type(odd) {\r\n    background: #fff;\r\n  }\r\n\r\n  tr:nth-of-type(even) {\r\n    background: #dbedf0;\r\n  }\r\n`;\r\n","import {\r\n  TransactionHistoryTable,\r\n  TransactionHistoryThead,\r\n  TransactionHistoryTbody,\r\n} from './TransactionHistory.styled';\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <TransactionHistoryTable>\r\n      <TransactionHistoryThead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </TransactionHistoryThead>\r\n\r\n      <TransactionHistoryTbody>\r\n        {items.map(({ type, amount, currency, id }) => (\r\n          <tr key={id}>\r\n            <td>{type}</td>\r\n            <td>{amount}</td>\r\n            <td>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </TransactionHistoryTbody>\r\n    </TransactionHistoryTable>\r\n  );\r\n}\r\n\r\nexport default TransactionHistory;\r\n","import user from './data/user.json';\r\nimport statisticalData from './data/statistical-data.json';\r\nimport friends from './data/friends.json';\r\nimport transactions from './data/transactions.json';\r\n\r\nimport Profile from './components/Profile/Profile';\r\nimport WrapperPage from './components/WrapperPage/WrapperPage';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport FriendList from './components/FriendList/FriendList';\r\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\r\n\r\nfunction App() {\r\n  return (\r\n    <WrapperPage>\r\n      <br />\r\n      <br />\r\n      <Profile\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        avatar={user.avatar}\r\n        stats={user.stats}\r\n      />\r\n      <br />\r\n      <br />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <Statistics stats={statisticalData} />\r\n      <br />\r\n      <br />\r\n      <FriendList friends={friends} />\r\n      <br />\r\n      <br />\r\n      <TransactionHistory items={transactions} />\r\n      <br />\r\n      <br />\r\n    </WrapperPage>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}